# =====================================================================
# ESTRUTURA PADRONIZADA CSP-BLFGA - PROCESSAMENTO COMPLETO (v1.3)
# =====================================================================

batch_info:
  nome: "Processamento Completo - Todos os Cenários"
  descricao: "Exemplo completo de execução de algoritmos com todas as configurações possíveis"
  autor: "Diego Grosmann"
  versao: "1.3"
  timeout_global: 3600  # 1 hora para processamento completo

# ---------------------------------------------------------------------
# DATASETS (bases) — referenciados por id
# ---------------------------------------------------------------------
datasets:
  # === DATASETS SINTÉTICOS - DIFERENTES COMPLEXIDADES ===
  - id: dna_muito_pequeno
    nome: "DNA Muito Pequeno (Teste Rápido)"
    tipo: "synthetic"
    parametros:
      n: 3
      L: 5
      alphabet: "ACGT"
      noise: 0.1
      fully_random: false
      seed: 42

  - id: dna_pequeno
    nome: "DNA Pequeno (Desenvolvimento)"
    tipo: "synthetic"
    parametros:
      n: 5
      L: 10
      alphabet: "ACGT"
      noise: 0.15
      fully_random: false
      seed: 123

  - id: dna_medio
    nome: "DNA Médio (Validação)"
    tipo: "synthetic"
    parametros:
      n: 10
      L: 20
      alphabet: "ACGT"
      noise: 0.2
      fully_random: false
      seed: 456

  - id: dna_grande
    nome: "DNA Grande (Benchmark)"
    tipo: "synthetic"
    parametros:
      n: 15
      L: 30
      alphabet: "ACGT"
      noise: 0.25
      fully_random: false
      seed: 789

  - id: dna_muito_grande
    nome: "DNA Muito Grande (Stress Test)"
    tipo: "synthetic"
    parametros:
      n: 20
      L: 50
      alphabet: "ACGT"
      noise: 0.3
      fully_random: false
      seed: 101112

  # === DATASETS SINTÉTICOS - DIFERENTES ALFABETOS ===
  - id: proteina_pequena
    nome: "Proteína Pequena (20 aminoácidos)"
    tipo: "synthetic"
    parametros:
      n: 5
      L: 8
      alphabet: "ACDEFGHIKLMNPQRSTVWY"
      noise: 0.35
      fully_random: false
      seed: 131415

  - id: proteina_media
    nome: "Proteína Média (20 aminoácidos)"
    tipo: "synthetic"
    parametros:
      n: 8
      L: 15
      alphabet: "ACDEFGHIKLMNPQRSTVWY"
      noise: 0.4
      fully_random: false
      seed: 161718

  - id: binario_pequeno
    nome: "Binário Pequeno (2 símbolos)"
    tipo: "synthetic"
    parametros:
      n: 6
      L: 12
      alphabet: "01"
      noise: 0.2
      fully_random: false
      seed: 192021

  - id: binario_medio
    nome: "Binário Médio (2 símbolos)"
    tipo: "synthetic"
    parametros:
      n: 10
      L: 20
      alphabet: "01"
      noise: 0.25
      fully_random: false
      seed: 222324

  - id: alfabeto_pequeno
    nome: "Alfabeto Pequeno (3 símbolos)"
    tipo: "synthetic"
    parametros:
      n: 7
      L: 14
      alphabet: "ABC"
      noise: 0.2
      fully_random: false
      seed: 252627

  - id: alfabeto_medio
    nome: "Alfabeto Médio (8 símbolos)"
    tipo: "synthetic"
    parametros:
      n: 6
      L: 12
      alphabet: "ABCDEFGH"
      noise: 0.3
      fully_random: false
      seed: 282930

  # === DATASETS SINTÉTICOS - DIFERENTES NÍVEIS DE RUÍDO ===
  - id: dna_sem_ruido
    nome: "DNA Sem Ruído (0% ruído)"
    tipo: "synthetic"
    parametros:
      n: 8
      L: 16
      alphabet: "ACGT"
      noise: 0.0
      fully_random: false
      seed: 313233

  - id: dna_pouco_ruido
    nome: "DNA Pouco Ruído (5% ruído)"
    tipo: "synthetic"
    parametros:
      n: 8
      L: 16
      alphabet: "ACGT"
      noise: 0.05
      fully_random: false
      seed: 343536

  - id: dna_muito_ruido
    nome: "DNA Muito Ruído (40% ruído)"
    tipo: "synthetic"
    parametros:
      n: 8
      L: 16
      alphabet: "ACGT"
      noise: 0.4
      fully_random: false
      seed: 373839

  - id: dna_ruido_extremo
    nome: "DNA Ruído Extremo (50% ruído)"
    tipo: "synthetic"
    parametros:
      n: 8
      L: 16
      alphabet: "ACGT"
      noise: 0.5
      fully_random: false
      seed: 404142

  # === DATASETS SINTÉTICOS - FULLY RANDOM ===
  - id: dna_completamente_aleatorio
    nome: "DNA Completamente Aleatório"
    tipo: "synthetic"
    parametros:
      n: 6
      L: 12
      alphabet: "ACGT"
      noise: 0.0
      fully_random: true
      seed: 434445

  - id: proteina_completamente_aleatoria
    nome: "Proteína Completamente Aleatória"
    tipo: "synthetic"
    parametros:
      n: 5
      L: 10
      alphabet: "ACDEFGHIKLMNPQRSTVWY"
      noise: 0.0
      fully_random: true
      seed: 464748

  # === DATASETS DE ARQUIVO ===
  - id: arquivo_teste
    nome: "Arquivo FASTA Teste"
    tipo: "file"
    parametros:
      filename: "saved_datasets/teste.fasta"

  - id: arquivo_coi_gene
    nome: "Arquivo COI Gene"
    tipo: "file"
    parametros:
      filename: "saved_datasets/entrez_nucleotide_COIGene AND 600650SLEN_n20.fasta"

  - id: arquivo_sintetico_n10
    nome: "Arquivo Sintético N10"
    tipo: "file"
    parametros:
      filename: "saved_datasets/synthetic_n10_L20_noise0.1_ACTG.fasta"

  - id: arquivo_sintetico_n20_01
    nome: "Arquivo Sintético N20 (Binário)"
    tipo: "file"
    parametros:
      filename: "saved_datasets/synthetic_n20_L50_noise0.1_01.fasta"

  - id: arquivo_sintetico_n20_acgt
    nome: "Arquivo Sintético N20 (DNA)"
    tipo: "file"
    parametros:
      filename: "saved_datasets/synthetic_n20_L50_noise0.1_ACTG.fasta"

  - id: arquivo_sintetico_n30
    nome: "Arquivo Sintético N30"
    tipo: "file"
    parametros:
      filename: "saved_datasets/synthetic_n30_L100_noise0.1_ACTG.fasta"

  # === DATASETS ENTREZ (NCBI) ===
  - id: entrez_pequeno
    nome: "Entrez Pequeno (5 sequências)"
    tipo: "entrez"
    parametros:
      query: "COIGene AND 600:650[SLEN]"
      db: "nucleotide"
      retmax: 5

  - id: entrez_medio
    nome: "Entrez Médio (10 sequências)"
    tipo: "entrez"
    parametros:
      query: "COIGene AND 600:650[SLEN]"
      db: "nucleotide"
      retmax: 10

  - id: entrez_grande
    nome: "Entrez Grande (20 sequências)"
    tipo: "entrez"
    parametros:
      query: "COIGene AND 600:650[SLEN]"
      db: "nucleotide"
      retmax: 20

  - id: entrez_custom_16s
    nome: "Entrez 16S rRNA"
    tipo: "entrez"
    parametros:
      query: "16S ribosomal RNA AND 1400:1600[SLEN]"
      db: "nucleotide"
      retmax: 8

  - id: entrez_custom_rbcl
    nome: "Entrez rbcL Gene"
    tipo: "entrez"
    parametros:
      query: "rbcL AND 500:800[SLEN]"
      db: "nucleotide"
      retmax: 6

# ---------------------------------------------------------------------
# TAREFA — EXECUTION
# ---------------------------------------------------------------------
task:
  type: "execution"

  execution:
    executions:
      # === EXECUÇÃO 1: TESTE RÁPIDO - DESENVOLVIMENTO ===
      - nome: "Teste Rápido - Desenvolvimento"
        dataset: dna_muito_pequeno
        runs_per_algorithm_per_base: 3    # Execuções por algoritmo por base
        num_bases: 2                      # Número de bases (datasets gerados)
        timeout: 30                       # Timeout por execução (segundos)
        
      # === EXECUÇÃO 2: VALIDAÇÃO BÁSICA ===
      - nome: "Validação Básica - DNA Pequeno"
        dataset: dna_pequeno
        runs_per_algorithm_per_base: 5
        num_bases: 3
        timeout: 60
        
      # === EXECUÇÃO 3: BENCHMARK MÉDIO ===
      - nome: "Benchmark Médio - DNA Médio"
        dataset: dna_medio
        runs_per_algorithm_per_base: 10
        num_bases: 5
        timeout: 120
        
      # === EXECUÇÃO 4: BENCHMARK COMPLEXO ===
      - nome: "Benchmark Complexo - DNA Grande"
        dataset: dna_grande
        runs_per_algorithm_per_base: 15
        num_bases: 3
        timeout: 300
        
      # === EXECUÇÃO 5: STRESS TEST ===
      - nome: "Stress Test - DNA Muito Grande"
        dataset: dna_muito_grande
        runs_per_algorithm_per_base: 5
        num_bases: 2
        timeout: 600
        
      # === EXECUÇÃO 6: TESTE DE ALFABETO - PROTEÍNAS ===
      - nome: "Teste Proteínas - Alfabeto 20"
        dataset: proteina_pequena
        runs_per_algorithm_per_base: 8
        num_bases: 4
        timeout: 180
        
      - nome: "Benchmark Proteínas - Alfabeto 20"
        dataset: proteina_media
        runs_per_algorithm_per_base: 12
        num_bases: 3
        timeout: 240
        
      # === EXECUÇÃO 7: TESTE DE ALFABETO - BINÁRIO ===
      - nome: "Teste Binário - Alfabeto 2"
        dataset: binario_pequeno
        runs_per_algorithm_per_base: 10
        num_bases: 5
        timeout: 90
        
      - nome: "Benchmark Binário - Alfabeto 2"
        dataset: binario_medio
        runs_per_algorithm_per_base: 15
        num_bases: 4
        timeout: 150
        
      # === EXECUÇÃO 8: TESTE DE ALFABETO - PEQUENO ===
      - nome: "Teste Alfabeto Pequeno - 3 Símbolos"
        dataset: alfabeto_pequeno
        runs_per_algorithm_per_base: 8
        num_bases: 4
        timeout: 100
        
      - nome: "Teste Alfabeto Médio - 8 Símbolos"
        dataset: alfabeto_medio
        runs_per_algorithm_per_base: 6
        num_bases: 3
        timeout: 120
        
      # === EXECUÇÃO 9: ANÁLISE DE RUÍDO ===
      - nome: "Análise Ruído - Sem Ruído"
        dataset: dna_sem_ruido
        runs_per_algorithm_per_base: 12
        num_bases: 4
        timeout: 100
        
      - nome: "Análise Ruído - Pouco Ruído"
        dataset: dna_pouco_ruido
        runs_per_algorithm_per_base: 12
        num_bases: 4
        timeout: 100
        
      - nome: "Análise Ruído - Muito Ruído"
        dataset: dna_muito_ruido
        runs_per_algorithm_per_base: 12
        num_bases: 4
        timeout: 150
        
      - nome: "Análise Ruído - Ruído Extremo"
        dataset: dna_ruido_extremo
        runs_per_algorithm_per_base: 12
        num_bases: 4
        timeout: 200
        
      # === EXECUÇÃO 10: COMPLETAMENTE ALEATÓRIO ===
      - nome: "Teste Completamente Aleatório - DNA"
        dataset: dna_completamente_aleatorio
        runs_per_algorithm_per_base: 10
        num_bases: 5
        timeout: 120
        
      - nome: "Teste Completamente Aleatório - Proteína"
        dataset: proteina_completamente_aleatoria
        runs_per_algorithm_per_base: 8
        num_bases: 4
        timeout: 150
        
      # === EXECUÇÃO 11: DATASETS DE ARQUIVO ===
      - nome: "Execução Arquivo Teste"
        dataset: arquivo_teste
        runs_per_algorithm_per_base: 10
        num_bases: 1                      # Arquivos sempre num_bases=1
        timeout: 120
        
      - nome: "Execução Arquivo COI Gene"
        dataset: arquivo_coi_gene
        runs_per_algorithm_per_base: 8
        num_bases: 1
        timeout: 300
        
      - nome: "Execução Arquivo Sintético N10"
        dataset: arquivo_sintetico_n10
        runs_per_algorithm_per_base: 15
        num_bases: 1
        timeout: 180
        
      - nome: "Execução Arquivo Sintético N20 Binário"
        dataset: arquivo_sintetico_n20_01
        runs_per_algorithm_per_base: 12
        num_bases: 1
        timeout: 240
        
      - nome: "Execução Arquivo Sintético N20 DNA"
        dataset: arquivo_sintetico_n20_acgt
        runs_per_algorithm_per_base: 12
        num_bases: 1
        timeout: 240
        
      - nome: "Execução Arquivo Sintético N30"
        dataset: arquivo_sintetico_n30
        runs_per_algorithm_per_base: 8
        num_bases: 1
        timeout: 450
        
      # === EXECUÇÃO 12: DATASETS ENTREZ ===
      - nome: "Execução Entrez Pequeno"
        dataset: entrez_pequeno
        runs_per_algorithm_per_base: 10
        num_bases: 1                      # Entrez sempre num_bases=1
        timeout: 150
        
      - nome: "Execução Entrez Médio"
        dataset: entrez_medio
        runs_per_algorithm_per_base: 8
        num_bases: 1
        timeout: 240
        
      - nome: "Execução Entrez Grande"
        dataset: entrez_grande
        runs_per_algorithm_per_base: 6
        num_bases: 1
        timeout: 400
        
      - nome: "Execução Entrez 16S rRNA"
        dataset: entrez_custom_16s
        runs_per_algorithm_per_base: 8
        num_bases: 1
        timeout: 200
        
      - nome: "Execução Entrez rbcL Gene"
        dataset: entrez_custom_rbcl
        runs_per_algorithm_per_base: 10
        num_bases: 1
        timeout: 180
        
      # === EXECUÇÃO 13: COMPARAÇÃO ALGORITMOS - MESMO DATASET ===
      - nome: "Comparação Algoritmos - DNA Médio"
        dataset: dna_medio
        runs_per_algorithm_per_base: 20   # Mais execuções para estatísticas
        num_bases: 5
        timeout: 150
        
      - nome: "Comparação Algoritmos - Proteína Média"
        dataset: proteina_media
        runs_per_algorithm_per_base: 15
        num_bases: 4
        timeout: 200
        
      - nome: "Comparação Algoritmos - Binário Médio"
        dataset: binario_medio
        runs_per_algorithm_per_base: 18
        num_bases: 4
        timeout: 120
        
      # === EXECUÇÃO 14: ESCALABILIDADE ===
      - nome: "Escalabilidade - N Pequeno"
        dataset: dna_pequeno
        runs_per_algorithm_per_base: 10
        num_bases: 8                      # Muitas bases para estatísticas
        timeout: 90
        
      - nome: "Escalabilidade - N Médio"
        dataset: dna_medio
        runs_per_algorithm_per_base: 8
        num_bases: 6
        timeout: 150
        
      - nome: "Escalabilidade - N Grande"
        dataset: dna_grande
        runs_per_algorithm_per_base: 6
        num_bases: 4
        timeout: 300
        
      - nome: "Escalabilidade - N Muito Grande"
        dataset: dna_muito_grande
        runs_per_algorithm_per_base: 4
        num_bases: 2
        timeout: 600
        
      # === EXECUÇÃO 15: REPRODUTIBILIDADE ===
      - nome: "Reprodutibilidade - Teste 1"
        dataset: dna_medio
        runs_per_algorithm_per_base: 25   # Muitas execuções para análise estatística
        num_bases: 1                      # Uma base para controle
        timeout: 120
        
      - nome: "Reprodutibilidade - Teste 2"
        dataset: proteina_pequena
        runs_per_algorithm_per_base: 25
        num_bases: 1
        timeout: 180
        
      # === EXECUÇÃO 16: TIMEOUT ANALYSIS ===
      - nome: "Timeout Analysis - Rápido"
        dataset: dna_medio
        runs_per_algorithm_per_base: 10
        num_bases: 3
        timeout: 30                       # Timeout baixo para testar comportamento
        
      - nome: "Timeout Analysis - Médio"
        dataset: dna_medio
        runs_per_algorithm_per_base: 10
        num_bases: 3
        timeout: 60
        
      - nome: "Timeout Analysis - Longo"
        dataset: dna_medio
        runs_per_algorithm_per_base: 10
        num_bases: 3
        timeout: 300

# ---------------------------------------------------------------------
# ALGORITMOS E PARÂMETROS FIXOS
# ---------------------------------------------------------------------
algorithms: ["Baseline", "BLF-GA", "CSC", "DP-CSP", "H3-CSP"]

algorithm_params:
  # === BASELINE ===
  "Baseline":
    tie_break: "lex"              # Critério de desempate: lex | random | first
    
  # === BLF-GA ===
  "BLF-GA":
    # === PARÂMETROS DE POPULAÇÃO ===
    pop_size: 100                 # Tamanho da população (int ou float para n*pop_size)
    min_pop_size: 20              # Tamanho mínimo da população
    seed: 42                      # Semente para reprodutibilidade
    
    # === PARÂMETROS DE BLOCOS ===
    initial_blocks: 0.2           # Blocos iniciais (float 0-1 para proporção de L)
    min_block_len: 1              # Tamanho mínimo do bloco
    rediv_freq: 10                # Frequência de redivisão (gerações)
    
    # === OPERADORES GENÉTICOS ===
    cross_prob: 0.9               # Probabilidade de crossover
    crossover_type: "one_point"   # Tipo: one_point | uniform | blend_blocks
    mut_prob: 0.1                 # Probabilidade de mutação
    mutation_type: "multi"        # Tipo: multi | inversion | transposition
    mutation_multi_n: 2           # Número de posições para mutação multi
    elite_rate: 0.05              # Taxa de elite (proporção)
    tournament_k: 2               # Tamanho do torneio
    
    # === DIVERSIDADE E IMIGRANTES ===
    immigrant_freq: 10            # Frequência de imigrantes (gerações)
    immigrant_ratio: 0.2          # Proporção de imigrantes
    diversity_threshold: 0.4      # Limiar de diversidade
    
    # === MUTAÇÃO ADAPTATIVA ===
    mutation_adapt_N: 10          # Gerações para detectar convergência
    mutation_adapt_factor: 2.0    # Fator de aumento da mutação
    mutation_adapt_duration: 5    # Duração do aumento (gerações)
    
    # === NICHING ===
    niching: false                # Ativar niching
    niching_radius: 3             # Raio do nicho
    
    # === REFINAMENTO LOCAL ===
    refinement_type: "greedy"     # Tipo: greedy | swap | insertion | 2opt
    refine_elites: "best"         # Quem refinar: best | all
    refine_iter_limit: 100        # Limite de iterações
    
    # === CRITÉRIOS DE PARADA ===
    max_gens: 100                 # Número máximo de gerações
    max_time: 300.0               # Tempo máximo (segundos)
    no_improve_patience: 0.2      # Paciência sem melhoria (float 0-1 para proporção)
    restart_patience: 20          # Paciência para restart (gerações)
    restart_ratio: 0.3            # Proporção da população a reiniciar
    disable_elitism_gens: 5       # Desabilitar elitismo (gerações)
    
  # === CSC ===
  "CSC":
    # === PARÂMETROS PRINCIPAIS ===
    max_iter: 1000                # Iterações máximas
    patience: 50                  # Paciência sem melhoria
    min_improvement: 1e-6         # Melhoria mínima
    
    # === PARÂMETROS DE DIVISÃO ===
    min_d: 2                      # Distância mínima
    d_factor: 0.8                 # Fator de redução da distância
    min_blocks: 2                 # Número mínimo de blocos
    max_blocks: 4                 # Número máximo de blocos
    n_div: 6                      # Divisor para n
    l_div: 25                     # Divisor para L
    
    # === RESTART ===
    random_restart: true          # Habilitar restart aleatório
    restart_patience: 30          # Paciência para restart
    max_restarts: 3               # Número máximo de restarts
    
  # === H3-CSP ===
  "H3-CSP":
    # === PARÂMETROS DE DIVISÃO DE BLOCOS ===
    auto_blocks: true             # Usar divisão automática por √L
    min_block_size: 2             # Tamanho mínimo de bloco
    max_blocks: null              # Máximo de blocos (null = automático)
    block_size: 2                 # Tamanho base de bloco
    block_strategy: null          # Estratégia de divisão
    
    # === LIMIARES DE DIFICULDADE ===
    block_small: 2                # Limite para blocos pequenos
    block_medium: 4               # Limite para blocos médios
    block_large: 8                # Limite para blocos grandes
    
    # === PARÂMETROS DE BUSCA ===
    exhaustive_limit: 10000       # Limite para busca exaustiva
    beam_width: 32                # Largura do beam search
    k_candidates: 5               # Número de candidatos por bloco
    
    # === REFINAMENTO E BUSCA LOCAL ===
    local_iters: 3                # Iterações de busca local
    local_search: true            # Habilitar busca local
    local_search_iters: 10        # Iterações de busca local
    
    # === CONTROLE DE EXECUÇÃO ===
    max_time: 300                 # Tempo máximo (segundos)
    max_iterations: 100           # Iterações máximas
    seed: null                    # Semente para reprodutibilidade
    
    # === DIVERSIDADE E RESTART ===
    diversity_factor: 0.5         # Fator de diversidade
    diversity_threshold: 1        # Limiar de diversidade
    restart_threshold: 50         # Limiar para restart
    max_restarts: 2               # Número máximo de restarts
    
    # === PARÂMETROS EXPERIMENTAIS ===
    fallback_enabled: true        # Habilitar fallback para blocos grandes
    
  # === DP-CSP ===
  "DP-CSP":
    # === PARÂMETROS PRINCIPAIS ===
    max_d: null                   # Distância máxima (null = automático)
    max_depth: 10                 # Profundidade máxima
    warn_threshold: 9             # Alerta se (d+1)^n > 10^9
    max_time: 300                 # Timeout em segundos
    
    # === HEURÍSTICA E PODA ===
    use_heuristic: true           # Usar heurística
    pruning_threshold: 0.5        # Limiar de poda
    
    # === CONTROLE DE MEMÓRIA ===
    memory_limit: 500             # Limite de memória (MB)

# ---------------------------------------------------------------------
# SAÍDA E RELATÓRIOS
# ---------------------------------------------------------------------
output:
  save_results: true                    # Salvar resultados
  save_detailed_results: true          # Salvar resultados detalhados
  save_plots: true                      # Salvar gráficos
  plot_format: "png"                    # Formato: png | svg | pdf
  results_dir: "outputs/batch_processamento_completo"  # Diretório
  
  # === CONFIGURAÇÕES DE PLOTAGEM ===
  plot_convergence: true               # Gráfico de convergência
  plot_comparison: true                # Gráfico de comparação
  plot_boxplots: true                  # Box plots
  plot_scatter: true                   # Scatter plots
  plot_heatmap: true                   # Heatmap de resultados
  plot_runtime: true                   # Gráfico de tempo de execução
  plot_success_rate: true              # Taxa de sucesso
  plot_quality_vs_time: true           # Qualidade vs tempo
  
  # === CONFIGURAÇÕES DE ESTATÍSTICAS ===
  calculate_statistics: true           # Calcular estatísticas
  confidence_level: 0.95               # Nível de confiança
  include_outliers: true               # Incluir outliers
  statistical_tests: true             # Testes estatísticos
  
  # === CONFIGURAÇÕES DE RELATÓRIO ===
  generate_report: true                # Gerar relatório HTML
  report_format: "html"                # Formato: html | pdf
  include_raw_data: true               # Incluir dados brutos
  include_summary: true                # Incluir resumo
  include_analysis: true               # Incluir análise
  include_recommendations: true        # Incluir recomendações
  
  # === CONFIGURAÇÕES DE EXPORTAÇÃO ===
  export_csv: true                     # Exportar CSV
  export_json: true                    # Exportar JSON
  export_xlsx: true                    # Exportar Excel
  
# ---------------------------------------------------------------------
# CONFIGURAÇÕES AVANÇADAS
# ---------------------------------------------------------------------
advanced:
  # === INTERFACE ===
  use_curses: true                     # Usar interface curses
  show_progress: true                  # Mostrar progresso
  verbose: true                        # Modo verboso
  
  # === PARALELISMO ===
  parallel:
    n_jobs: -1                         # Workers externos: -1 = todos os CPUs
    internal_workers: 2                # Workers internos (algoritmos)
    execution_workers: 4               # Workers para execução
    
  # === CONFIGURAÇÕES DE EXECUÇÃO ===
  execution:
    retry_failed: true                 # Tentar novamente execuções falhadas
    max_retries: 3                     # Número máximo de tentativas
    retry_delay: 5                     # Delay entre tentativas (segundos)
    continue_on_error: true            # Continuar mesmo com erros
    validate_results: true             # Validar resultados
    
  # === GERENCIAMENTO DE MEMÓRIA ===
  memory:
    max_memory_mb: 8192                # Máximo de memória (MB)
    cleanup_interval: 100              # Intervalo de limpeza (execuções)
    garbage_collect: true              # Forçar garbage collection
    
  # === LOGS ===
  log_level: "INFO"                    # Nível: DEBUG | INFO | WARNING | ERROR
  log_executions: true                 # Logar execuções individuais
  log_algorithms: true                 # Logar algoritmos
  log_datasets: true                   # Logar datasets
  log_results: true                    # Logar resultados
  log_errors: true                     # Logar erros
  log_timing: true                     # Logar tempos
  
  # === TIMEOUT E CONTROLE ===
  timeout_buffer: 10                   # Buffer de timeout (segundos)
  graceful_shutdown: true              # Shutdown gracioso
  save_on_interrupt: true              # Salvar ao interromper
  
  # === EXPERIMENTAÇÃO ===
  experiment:
    enable_profiling: false            # Habilitar profiling
    enable_debugging: false            # Habilitar debugging
    enable_caching: true               # Habilitar cache
    cache_results: true                # Cachear resultados
    
  # === VALIDAÇÃO ===
  validation:
    validate_datasets: true            # Validar datasets
    validate_algorithms: true          # Validar algoritmos
    validate_parameters: true          # Validar parâmetros
    check_convergence: true            # Verificar convergência
    
  # === CONFIGURAÇÕES DE CURSES ===
  curses:
    refresh_rate: 1.0                  # Taxa de atualização (segundos)
    show_details: true                 # Mostrar detalhes
    show_progress_bars: true           # Mostrar barras de progresso
    color_support: true                # Suporte a cores
    
  # === CONFIGURAÇÕES DE RESULTADO ===
  results:
    precision: 6                       # Precisão dos números
    scientific_notation: false         # Notação científica
    include_metadata: true             # Incluir metadados
    compress_output: false             # Comprimir saída
    
# ---------------------------------------------------------------------
# COMENTÁRIOS SOBRE CONFIGURAÇÕES DE EXECUÇÃO
# ---------------------------------------------------------------------
# 
# PARÂMETROS DE EXECUÇÃO:
# 
# runs_per_algorithm_per_base: Número de execuções independentes de cada
#                             algoritmo para cada base gerada
# 
# num_bases: Número de bases (datasets) a serem geradas. Para datasets
#           sintéticos, gera múltiplas instâncias diferentes. Para
#           datasets de arquivo ou Entrez, sempre usar 1.
# 
# timeout: Tempo máximo para cada execução individual de um algoritmo
#         em segundos. Algoritmos que excedem este tempo são interrompidos.
# 
# TIPOS DE DATASETS:
# 
# synthetic: Datasets gerados sinteticamente
#           - Parâmetros: n, L, alphabet, noise, fully_random, seed
#           - Permite controle total sobre as características
# 
# file: Datasets carregados de arquivos FASTA
#      - Parâmetros: filename (caminho para o arquivo)
#      - Sempre usar num_bases=1
# 
# entrez: Datasets baixados do NCBI via Entrez
#        - Parâmetros: query, db, retmax
#        - Sempre usar num_bases=1
# 
# CONFIGURAÇÕES DE ALGORITMOS:
# 
# Cada algoritmo tem seus próprios parâmetros que podem ser ajustados
# para otimizar desempenho ou explorar comportamentos diferentes.
# 
# PARALELISMO:
# 
# n_jobs: Número de workers para execução paralela externa
#        -1 = usar todos os CPUs disponíveis
# 
# internal_workers: Número de workers internos que os algoritmos
#                  podem usar (se suportado)
# 
# CURSES INTERFACE:
# 
# use_curses: Habilita interface em tempo real que mostra progresso
#            detalhado das execuções
# 
# SAÍDA DE RESULTADOS:
# 
# O sistema salva resultados em múltiplos formatos (JSON, CSV, Excel)
# e gera gráficos automaticamente para análise posterior.
# 
# =====================================================================