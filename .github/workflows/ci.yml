name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Code Quality & Linting
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort ruff
        pip install -e .
    
    - name: Check code formatting with Black
      run: |
        black --check --diff --line-length 120 .
    
    - name: Check import sorting with isort
      run: |
        isort --check-only --profile black --line-length 120 .
    
    - name: Lint with ruff
      run: |
        ruff check .

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']
    
    name: Tests (Python ${{ matrix.python-version }})
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-mock pytest-vcr
        pip install -e .
    
    - name: Create test datasets
      run: |
        mkdir -p saved_datasets
        echo -e ">seq1\nACGT\n>seq2\nACGT" > saved_datasets/dataset_custom.fasta
        echo -e ">test1\nAAAA\n>test2\nTTTT" > saved_datasets/test.fasta
    
    - name: Run tests with coverage
      run: |
        pytest tests/ -v --cov=csp_blfga --cov=algorithms --cov=datasets --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  integration:
    runs-on: ubuntu-latest
    name: Integration Tests
    needs: [lint, test]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
    
    - name: Create test datasets
      run: |
        mkdir -p saved_datasets batch_configs
        echo -e ">seq1\nACGT\n>seq2\nACGT" > saved_datasets/dataset_custom.fasta
    
    - name: Test CLI entry point
      run: |
        python -m csp_blfga.ui.cli --help
    
    - name: Test main entry point
      run: |
        timeout 30s python main.py --help || true
    
    - name: Create and test batch config
      run: |
        cat > batch_configs/test_config.yaml << EOF
        nome: "test_config"
        algoritmos: ["Baseline"]
        dataset:
          tipo: "file"
          filepath: "saved_datasets/dataset_custom.fasta"
        execucoes_por_algoritmo_por_base: 1
        num_bases: 1
        timeout: 30
        EOF
        
        # Test config loading
        python -c "
        from csp_blfga.core.config import ConfigLoader
        loader = ConfigLoader()
        config = loader.load_config('batch_configs/test_config.yaml')
        print(f'Config loaded: {config[\"nome\"]}')
        "

  build:
    runs-on: ubuntu-latest
    name: Build Package
    needs: [lint, test, integration]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Check package
      run: |
        python -m twine check dist/*
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  pre-commit:
    runs-on: ubuntu-latest
    name: Pre-commit hooks
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install pre-commit
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
    
    - name: Run pre-commit
      run: |
        pre-commit run --all-files
